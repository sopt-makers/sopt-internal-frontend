name: Production Deploy

on:
  workflow_dispatch:

jobs:
  build-app:
    uses: ./.github/workflows/build.yml
    with:
      env: ${{ vars.PRODUCTION_ENV }}

  deploy:
    needs: build-app
    environment: production
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
      - name: Download Built App
        uses: actions/download-artifact@v3
        with:
          name: built-app
          path: out
      - name: Publish
        run: yarn dlx wrangler pages publish "out" --project-name "${{ vars.CF_PAGES_NAME_PRODUCTION }}" --commit-message " "
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  changeset-release:
    needs: deploy
    runs-on: ubuntu-latest
    name: Changeset Release
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Configure npm
        run: |
          cat << EOF > "$HOME/.npmrc"
            auto-install-peers = true
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: yarn changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        if: steps.changesets.outputs.hasChangesets == 'true'
        run: yarn publish-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
